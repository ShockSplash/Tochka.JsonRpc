<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tochka.JsonRpc.Common</name>
    </assembly>
    <members>
        <member name="T:Tochka.JsonRpc.Common.Converters.CallConverter">
            <summary>
            Handle dumb rule of Id present for requests and not present for notifications
            </summary>
        </member>
        <member name="T:Tochka.JsonRpc.Common.Converters.JsonRpcIdConverter">
            <summary>
            Handle dumb rule of Id as string/number/null for requests and responses
            </summary>
        </member>
        <member name="T:Tochka.JsonRpc.Common.Converters.RequestWrapperConverter">
            <summary>
            Handle dumb rule of request being single or batch
            </summary>
        </member>
        <member name="T:Tochka.JsonRpc.Common.Converters.ResponseWrapperConverter">
            <summary>
            Handle dumb rule of response being single on some batch errors
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.RequestItemKey">
            <summary>
            Parsed IUntypedCall, stored in HttpContext.Items after successful reading of JSON Rpc request
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.NestedPipelineItemKey">
            <summary>
            When set in HttpContext.Items, denotes that this is nested pipeline with copied HttpContext, started from JsonRpcMiddleware
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ActionResultTypeItemKey">
            <summary>
            Type of ActionResult returned from MVC action or filter. Stored in HttpContext.Items
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ControllerMethodSeparator">
            <summary>
            "." Delimiter in "controller_name.action_name" to mimic "Class.Method" notation
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.IdProperty">
            <summary>
            "id" JSON property to look for Id in single request/response
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.JsonrpcVersionProperty">
            <summary>
            "jsonrpc" JSON property to look for version in single request/response
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.MethodProperty">
            <summary>
            "method" JSON property to look for method in single request
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ResultProperty">
            <summary>
            "result" JSON property to look for successful response data in single response
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ErrorProperty">
            <summary>
            "error" JSON property to look for error in single response
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.Version">
            <summary>
            "2.0" JSON Rpc version
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ReservedMethodPrefix">
            <summary>
            "rpc." Specification restricts use of methods with this prefix
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ServiceDiscoveryMethod">
            <summary>
            "rpc.discover" for OpenRPC Service Discovery
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ExceptionCode">
            <summary>
            -32000 Server Error. Usually happens on unhandled Exception
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.InternalExceptionCode">
            <summary>
            -32001 Server Error. Usually caused by JsonRpcInternalException.
            May indicate that you are trying to return HTTP code or ActionResult not supported or disabled by your configuration, or an internal bug.
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.DefaultRoute">
            <summary>
            "api/jsonrpc" Default route for JSON Rpc controllers
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ContentType">
            <summary>
            "application/json" Default content-type expected in JSON Rpc HTTP requests
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.ApiDocumentName">
            <summary>
            "JsonRpc" Prefix for documents like Swagger and OpenRpc
            </summary>
        </member>
        <member name="F:Tochka.JsonRpc.Common.JsonRpcConstants.DefaultSwaggerDoc">
            <summary>
            "REST" Swagger document name for non-JsonRpc actions
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Request.Untyped.IUntypedCall.RawJson">
            <summary>
            Set on deserialization. JSON content corresponding to this object
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Request.Untyped.UntypedNotification.RawJson">
            <summary>
            Set on deserialization. JSON content corresponding to this object
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Request.Untyped.UntypedRequest.RawJson">
            <summary>
            Set on deserialization. JSON content corresponding to this object
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Request.Untyped.UntypedRequest.RawId">
            <summary>
            Set on deserialization. JSON content corresponding to id property
            </summary>
        </member>
        <member name="T:Tochka.JsonRpc.Common.Models.Response.Errors.ExceptionInfo">
            <summary>
            Server-defined details about exceptions and unexpected HTTP codes
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Response.Response`1.Jsonrpc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Response.Untyped.UntypedErrorResponse.RawError">
            <summary>
            Set on deserialization. JSON content corresponding to error property
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Response.Untyped.UntypedErrorResponse.RawId">
            <summary>
            Set on deserialization. JSON content corresponding to id property
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Response.Untyped.UntypedResponse.RawResult">
            <summary>
            Set on deserialization. JSON content corresponding to result property
            </summary>
        </member>
        <member name="P:Tochka.JsonRpc.Common.Models.Response.Untyped.UntypedResponse.RawId">
            <summary>
            Set on deserialization. JSON content corresponding to id property
            </summary>
        </member>
    </members>
</doc>
